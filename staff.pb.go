// Code generated by protoc-gen-go. DO NOT EDIT.
// source: staff.proto

/*
Package staff is a generated protocol buffer package.

It is generated from these files:
	staff.proto

It has these top-level messages:
	GetUserMessage
	User
*/
package staff

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetUserMessage struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetUserMessage) Reset()                    { *m = GetUserMessage{} }
func (m *GetUserMessage) String() string            { return proto.CompactTextString(m) }
func (*GetUserMessage) ProtoMessage()               {}
func (*GetUserMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetUserMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type User struct {
	Id              string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TsName          string `protobuf:"bytes,2,opt,name=tsName" json:"tsName,omitempty"`
	Tsdbid          string `protobuf:"bytes,3,opt,name=tsdbid" json:"tsdbid,omitempty"`
	Tsuuid          string `protobuf:"bytes,4,opt,name=tsuuid" json:"tsuuid,omitempty"`
	Tscreated       string `protobuf:"bytes,5,opt,name=tscreated" json:"tscreated,omitempty"`
	Tslastconnected string `protobuf:"bytes,6,opt,name=tslastconnected" json:"tslastconnected,omitempty"`
	Email           string `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
	Joindate        string `protobuf:"bytes,8,opt,name=joindate" json:"joindate,omitempty"`
	Dob             string `protobuf:"bytes,9,opt,name=dob" json:"dob,omitempty"`
	Gender          string `protobuf:"bytes,10,opt,name=gender" json:"gender,omitempty"`
	Active          bool   `protobuf:"varint,11,opt,name=active" json:"active,omitempty"`
	Admin           int32  `protobuf:"varint,12,opt,name=admin" json:"admin,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetTsName() string {
	if m != nil {
		return m.TsName
	}
	return ""
}

func (m *User) GetTsdbid() string {
	if m != nil {
		return m.Tsdbid
	}
	return ""
}

func (m *User) GetTsuuid() string {
	if m != nil {
		return m.Tsuuid
	}
	return ""
}

func (m *User) GetTscreated() string {
	if m != nil {
		return m.Tscreated
	}
	return ""
}

func (m *User) GetTslastconnected() string {
	if m != nil {
		return m.Tslastconnected
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetJoindate() string {
	if m != nil {
		return m.Joindate
	}
	return ""
}

func (m *User) GetDob() string {
	if m != nil {
		return m.Dob
	}
	return ""
}

func (m *User) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *User) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *User) GetAdmin() int32 {
	if m != nil {
		return m.Admin
	}
	return 0
}

func init() {
	proto.RegisterType((*GetUserMessage)(nil), "staff.GetUserMessage")
	proto.RegisterType((*User)(nil), "staff.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Staff service

type StaffClient interface {
	GetUser(ctx context.Context, in *GetUserMessage, opts ...grpc.CallOption) (*User, error)
}

type staffClient struct {
	cc *grpc.ClientConn
}

func NewStaffClient(cc *grpc.ClientConn) StaffClient {
	return &staffClient{cc}
}

func (c *staffClient) GetUser(ctx context.Context, in *GetUserMessage, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/staff.staff/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Staff service

type StaffServer interface {
	GetUser(context.Context, *GetUserMessage) (*User, error)
}

func RegisterStaffServer(s *grpc.Server, srv StaffServer) {
	s.RegisterService(&_Staff_serviceDesc, srv)
}

func _Staff_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/staff.staff/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffServer).GetUser(ctx, req.(*GetUserMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Staff_serviceDesc = grpc.ServiceDesc{
	ServiceName: "staff.staff",
	HandlerType: (*StaffServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _Staff_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "staff.proto",
}

func init() { proto.RegisterFile("staff.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xc1, 0x4a, 0xf3, 0x40,
	0x10, 0xc7, 0x49, 0xda, 0xa4, 0xc9, 0xe4, 0xa3, 0x9f, 0x2c, 0x2a, 0x43, 0xf1, 0x10, 0x7a, 0xca,
	0xc5, 0x1e, 0x14, 0x7c, 0x05, 0x4f, 0x7a, 0x08, 0xf8, 0x00, 0x9b, 0xcc, 0xb4, 0xac, 0x34, 0x59,
	0xc9, 0x4e, 0x7d, 0x2e, 0x1f, 0x51, 0x76, 0x37, 0x55, 0xec, 0x6d, 0x7f, 0xbf, 0xff, 0xc0, 0x0e,
	0xff, 0x81, 0xca, 0x89, 0xde, 0xef, 0x77, 0x1f, 0x93, 0x15, 0xab, 0xb2, 0x00, 0xdb, 0x1a, 0xd6,
	0xcf, 0x2c, 0x6f, 0x8e, 0xa7, 0x17, 0x76, 0x4e, 0x1f, 0x58, 0xad, 0x21, 0x35, 0x84, 0x49, 0x9d,
	0x34, 0x65, 0x9b, 0x1a, 0xda, 0x7e, 0xa5, 0xb0, 0xf4, 0xf9, 0x65, 0xa0, 0x6e, 0x21, 0x17, 0xf7,
	0xaa, 0x07, 0xc6, 0x34, 0xb8, 0x99, 0xa2, 0xa7, 0xce, 0x10, 0x2e, 0xce, 0xde, 0x53, 0xf4, 0xa7,
	0x93, 0x21, 0x5c, 0x9e, 0xbd, 0x27, 0x75, 0x07, 0xa5, 0xb8, 0x7e, 0x62, 0x2d, 0x4c, 0x98, 0x85,
	0xe8, 0x57, 0xa8, 0x06, 0xfe, 0x8b, 0x3b, 0x6a, 0x27, 0xbd, 0x1d, 0x47, 0xee, 0xfd, 0x4c, 0x1e,
	0x66, 0x2e, 0xb5, 0xba, 0x86, 0x8c, 0x07, 0x6d, 0x8e, 0xb8, 0x0a, 0x79, 0x04, 0xb5, 0x81, 0xe2,
	0xdd, 0x9a, 0x91, 0xb4, 0x30, 0x16, 0x21, 0xf8, 0x61, 0x75, 0x05, 0x0b, 0xb2, 0x1d, 0x96, 0x41,
	0xfb, 0xa7, 0xdf, 0xf1, 0xc0, 0x23, 0xf1, 0x84, 0x10, 0x77, 0x8c, 0xe4, 0xbd, 0xee, 0xc5, 0x7c,
	0x32, 0x56, 0x75, 0xd2, 0x14, 0xed, 0x4c, 0xfe, 0x4f, 0x4d, 0x83, 0x19, 0xf1, 0x5f, 0x9d, 0x34,
	0x59, 0x1b, 0xe1, 0xe1, 0x09, 0x62, 0xbb, 0xea, 0x1e, 0x56, 0x73, 0xbb, 0xea, 0x66, 0x17, 0xdb,
	0xff, 0xdb, 0xf6, 0xa6, 0x9a, 0xb5, 0x77, 0x5d, 0x1e, 0x4e, 0xf3, 0xf8, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x0e, 0x3d, 0xdf, 0xd9, 0xa9, 0x01, 0x00, 0x00,
}
